{"version":3,"sources":["Assets/BackGroundImage.jpeg","components/components.js","components/FunctionClick.js","components/ClassClick.js","components/About.js","components/Projects.js","App.js","serviceWorker.js","index.js"],"names":["module","exports","components","FunctionClick","Component","About","className","src","BackGroundImage","alt","Projects","App","to","path","component","href","target","rel","class","Boolean","window","location","hostname","match","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","error","console","message"],"mappings":"8GAAAA,EAAOC,QAAU,IAA0B,8C,sKCa5BC,I,iBCCAC,I,8CCZUC,YCYVC,MAXf,WACI,OACI,yBAAKC,UAAU,mBACX,yOAGA,yBAAKA,UAAU,mBAAmBC,IAAKC,IAAiBC,IAAI,0BCCzDC,MARf,WACI,OACI,6BACI,0CC8FGC,MAxFf,WAGE,OACE,kBAAC,IAAD,KACE,yBAAKL,UAAU,OAEb,yBAAKA,UAAU,kBAEb,4BAAQA,UAAU,cAEhB,yBAAKA,UAAU,QACb,yCAGF,yBAAKA,UAAU,QACb,kBAAC,IAAD,CAAMM,GAAI,UACR,yCAEF,kBAAC,IAAD,CAAMA,GAAI,aACR,2CASN,yBAAKN,UAAU,aACb,kBAAC,IAAD,CAAOO,KAAM,CAAC,SAAU,KAAMC,UAAWT,IACzC,kBAAC,IAAD,CAAOQ,KAAK,YAAYC,UAAWJ,KASrC,yBAAKJ,UAAU,cAEb,uBACEA,UAAU,SACVS,KAAK,iCACLC,OAAO,SACPC,IAAI,uBAEJ,uBAAGX,UAAU,0BAGf,uBACEA,UAAU,WACVS,KAAK,sDACLC,OAAO,SACPC,IAAI,uBAEJ,uBAAGX,UAAU,qBAGf,uBACEA,UAAU,OACVS,KAAK,2BACLC,OAAO,SACPC,IAAI,uBAEJ,uBAAGX,UAAU,4BAGf,uBACEA,UAAU,KACVS,KAAK,OACLC,OAAO,SACPC,IAAI,uBAEJ,uBAAGC,MAAM,uBAMf,yBAAKZ,UAAU,uBChFHa,QACW,cAA7BC,OAAOC,SAASC,UAEe,UAA7BF,OAAOC,SAASC,UAEhBF,OAAOC,SAASC,SAASC,MACvB,2DCZNC,IAASC,OACP,kBAAC,IAAMC,WAAP,KACE,kBAAC,EAAD,OAEFC,SAASC,eAAe,SDyHpB,kBAAmBC,WACrBA,UAAUC,cAAcC,MACrBC,MAAK,SAAAC,GACJA,EAAaC,gBAEdC,OAAM,SAAAC,GACLC,QAAQD,MAAMA,EAAME,c","file":"static/js/main.4c08cd30.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/BackGroundImage.d88a860f.jpeg\";","import React from 'react';\r\n\r\nfunction components () {\r\n\r\n\r\n  return (\r\n\r\n    <div className=\"Container\">\r\n        \r\n    </div>\r\n  );\r\n}\r\n\r\nexport default components;\r\n","import React from 'react'\r\n\r\nfunction FunctionClick() {\r\n\r\n    function clickHandler() {\r\n        console.log('Button Clicked')\r\n    }\r\n    return (\r\n        <div>\r\n            <button onClick={clickHandler}>Click</button>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default FunctionClick\r\n","import React, { Component } from 'react'\r\n\r\nclass ClassClick extends Component {\r\n    ClickHandler() {\r\n        console.log('Clicked button')\r\n    }\r\n    render() {\r\n        return (\r\n            <div>\r\n                <button onClick={this.ClickHandler}> click on me</button>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nexport default ClassClick\r\n","import React from 'react'\r\nimport BackGroundImage from '../Assets/BackGroundImage.jpeg';\r\n\r\nfunction About() {\r\n    return (\r\n        <div className=\"about-container\">\r\n            <p>I am Burak barlas. I'm studying at Bahcesehir University in Istanbul. Yet, I'm beginning of my career. \r\n            I am interested in learning new computer language, trying to improve myself by making new projects.</p>\r\n\r\n            <img className=\"background-image\" src={BackGroundImage} alt=\"Bad Connection Huh!\" />\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default About\r\n","import React from 'react'\r\n\r\nfunction Projects() {\r\n    return (\r\n        <div>\r\n            <h1>updating</h1>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Projects\r\n","import React from 'react';\r\n\r\nimport './App.css';\r\nimport Components from './components/components';\r\nimport BackGroundImage from './Assets/BackGroundImage.jpeg';\r\nimport FunctionClick from './components/FunctionClick';\r\nimport { BrowserRouter as Router, Link, Route } from 'react-router-dom';\r\nimport ClassClick from './components/ClassClick';\r\nimport About from './components/About';\r\nimport Projects from './components/Projects';\r\n\r\nfunction App() {\r\n  // const title = \"Burak Barlas\";\r\n\r\n  return (\r\n    <Router>\r\n      <div className=\"App\">\r\n\r\n        <div className=\"main-container\">\r\n\r\n          <header className=\"App-header\">\r\n\r\n            <div className=\"page\">\r\n              <h1>About Me</h1>\r\n            </div>\r\n\r\n            <div className=\"menu\">\r\n              <Link to={'/about'} >\r\n                <h2>about me</h2>\r\n              </Link>\r\n              <Link to={'/projects'}>\r\n                <h2>projects</h2>\r\n              </Link>\r\n            </div>\r\n\r\n            {/* <FunctionClick/>\r\n          <ClassClick /> */}\r\n\r\n          </header>\r\n\r\n          <div className=\"container\">\r\n            <Route path={['/about', \"/\"]} component={About} />\r\n            <Route path='/projects' component={Projects} />\r\n\r\n            {/* <p>I am Burak barlas. I'm studying at Bahcesehir University in Istanbul. Yet, I'm beginning of my career. \r\n              I am interested in learning new computer language, trying to improve myself by making new projects.</p>\r\n\r\n            <img className=\"background-image\" src={BackGroundImage} alt=\"Bad Connection Huh!\" /> */}\r\n\r\n          </div>\r\n\r\n          <div className=\"ClickIcons\" >\r\n\r\n            <a\r\n              className=\"Github\"\r\n              href=\"https://github.com/BurakBarlas\"\r\n              target=\"_blank\"\r\n              rel=\"noopener noreferrer\"\r\n            >\r\n              <i className=\"fab fa-github-square\"></i>\r\n            </a>\r\n\r\n            <a\r\n              className=\"linkedin\"\r\n              href=\"https://www.linkedin.com/in/burak-barlas-337324184/\"\r\n              target=\"_blank\"\r\n              rel=\"noopener noreferrer\"\r\n            >\r\n              <i className=\"fab fa-linkedin\"></i>\r\n            </a>\r\n\r\n            <a\r\n              className=\"Mail\"\r\n              href=\"mailto:fpburak@gmail.com\"\r\n              target=\"_blank\"\r\n              rel=\"noopener noreferrer\"\r\n            >\r\n              <i className=\"fas fa-envelope-square\"></i>\r\n            </a>\r\n\r\n            <a\r\n              className=\"CV\"\r\n              href=\"mail\"\r\n              target=\"_blank\"\r\n              rel=\"noopener noreferrer\"\r\n            >\r\n              <i class=\"fas fa-file-alt\"></i>\r\n            </a>\r\n          </div>\r\n\r\n        </div>\r\n\r\n        <div className=\"backGroundLayer\"></div>\r\n\r\n      </div>\r\n    </Router>\r\n  );\r\n}\r\n\r\nexport default App;\r\n","// This optional code is used to register a service worker.\r\n// register() is not called by default.\r\n\r\n// This lets the app load faster on subsequent visits in production, and gives\r\n// it offline capabilities. However, it also means that developers (and users)\r\n// will only see deployed updates on subsequent visits to a page, after all the\r\n// existing tabs open on the page have been closed, since previously cached\r\n// resources are updated in the background.\r\n\r\n// To learn more about the benefits of this model and instructions on how to\r\n// opt-in, read https://bit.ly/CRA-PWA\r\n\r\nconst isLocalhost = Boolean(\r\n  window.location.hostname === 'localhost' ||\r\n    // [::1] is the IPv6 localhost address.\r\n    window.location.hostname === '[::1]' ||\r\n    // 127.0.0.0/8 are considered localhost for IPv4.\r\n    window.location.hostname.match(\r\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\r\n    )\r\n);\r\n\r\nexport function register(config) {\r\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\r\n    // The URL constructor is available in all browsers that support SW.\r\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\r\n    if (publicUrl.origin !== window.location.origin) {\r\n      // Our service worker won't work if PUBLIC_URL is on a different origin\r\n      // from what our page is served on. This might happen if a CDN is used to\r\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\r\n      return;\r\n    }\r\n\r\n    window.addEventListener('load', () => {\r\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\r\n\r\n      if (isLocalhost) {\r\n        // This is running on localhost. Let's check if a service worker still exists or not.\r\n        checkValidServiceWorker(swUrl, config);\r\n\r\n        // Add some additional logging to localhost, pointing developers to the\r\n        // service worker/PWA documentation.\r\n        navigator.serviceWorker.ready.then(() => {\r\n          console.log(\r\n            'This web app is being served cache-first by a service ' +\r\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\r\n          );\r\n        });\r\n      } else {\r\n        // Is not localhost. Just register service worker\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    });\r\n  }\r\n}\r\n\r\nfunction registerValidSW(swUrl, config) {\r\n  navigator.serviceWorker\r\n    .register(swUrl)\r\n    .then(registration => {\r\n      registration.onupdatefound = () => {\r\n        const installingWorker = registration.installing;\r\n        if (installingWorker == null) {\r\n          return;\r\n        }\r\n        installingWorker.onstatechange = () => {\r\n          if (installingWorker.state === 'installed') {\r\n            if (navigator.serviceWorker.controller) {\r\n              // At this point, the updated precached content has been fetched,\r\n              // but the previous service worker will still serve the older\r\n              // content until all client tabs are closed.\r\n              console.log(\r\n                'New content is available and will be used when all ' +\r\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\r\n              );\r\n\r\n              // Execute callback\r\n              if (config && config.onUpdate) {\r\n                config.onUpdate(registration);\r\n              }\r\n            } else {\r\n              // At this point, everything has been precached.\r\n              // It's the perfect time to display a\r\n              // \"Content is cached for offline use.\" message.\r\n              console.log('Content is cached for offline use.');\r\n\r\n              // Execute callback\r\n              if (config && config.onSuccess) {\r\n                config.onSuccess(registration);\r\n              }\r\n            }\r\n          }\r\n        };\r\n      };\r\n    })\r\n    .catch(error => {\r\n      console.error('Error during service worker registration:', error);\r\n    });\r\n}\r\n\r\nfunction checkValidServiceWorker(swUrl, config) {\r\n  // Check if the service worker can be found. If it can't reload the page.\r\n  fetch(swUrl, {\r\n    headers: { 'Service-Worker': 'script' },\r\n  })\r\n    .then(response => {\r\n      // Ensure service worker exists, and that we really are getting a JS file.\r\n      const contentType = response.headers.get('content-type');\r\n      if (\r\n        response.status === 404 ||\r\n        (contentType != null && contentType.indexOf('javascript') === -1)\r\n      ) {\r\n        // No service worker found. Probably a different app. Reload the page.\r\n        navigator.serviceWorker.ready.then(registration => {\r\n          registration.unregister().then(() => {\r\n            window.location.reload();\r\n          });\r\n        });\r\n      } else {\r\n        // Service worker found. Proceed as normal.\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    })\r\n    .catch(() => {\r\n      console.log(\r\n        'No internet connection found. App is running in offline mode.'\r\n      );\r\n    });\r\n}\r\n\r\nexport function unregister() {\r\n  if ('serviceWorker' in navigator) {\r\n    navigator.serviceWorker.ready\r\n      .then(registration => {\r\n        registration.unregister();\r\n      })\r\n      .catch(error => {\r\n        console.error(error.message);\r\n      });\r\n  }\r\n}\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport App from './App';\r\nimport * as serviceWorker from './serviceWorker';\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <App />\r\n  </React.StrictMode>,\r\n  document.getElementById('root')\r\n);\r\n\r\n// If you want your app to work offline and load faster, you can change\r\n// unregister() to register() below. Note this comes with some pitfalls.\r\n// Learn more about service workers: https://bit.ly/CRA-PWA\r\nserviceWorker.unregister();\r\n"],"sourceRoot":""}